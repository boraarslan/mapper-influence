name: rust-ci

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
env:
  CARGO_INCREMENTAL: 0
  RUST_BACKTRACE: 1
  RUSTFLAGS: -Dwarnings
  DATABASE_URL: postgres://mapper-influence:mi-dev@localhost:5432/mapper-influence-dev

jobs:
  cargo-clippy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v2  
      - name: cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: "--workspace --tests --all-features"
    services:
      # PostgreSQL service container
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: mapper-influence
          POSTGRES_PASSWORD: mi-dev
          POSTGRES_DB: mapper-influence-dev
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

  cargo-deny:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: Swatinem/rust-cache@v2  
      - name: cargo deny
        uses: EmbarkStudios/cargo-deny-action@v1
        with:
          rust-version: "1.65.0"
          log-level: warn
          command: check  

  cargo-fmt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt
      - uses: Swatinem/rust-cache@v2  
      - name: cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          toolchain: nightly
          args: --all -- --check

  cargo-nextest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v2  
      - name: Install nextest
        uses: taiki-e/install-action@nextest
      - name: cargo nextest
        uses: actions-rs/cargo@v1
        with:
          command: nextest
          args: run
    services:
      # PostgreSQL service container
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: mapper-influence
          POSTGRES_PASSWORD: mi-dev
          POSTGRES_DB: mapper-influence-dev
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

  cargo-doc:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v2  
      - name: cargo doc
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --no-deps --all-features --document-private-items
    services:
      # PostgreSQL service container
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: mapper-influence
          POSTGRES_PASSWORD: mi-dev
          POSTGRES_DB: mapper-influence-dev
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
