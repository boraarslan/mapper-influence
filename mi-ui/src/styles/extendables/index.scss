@import "../variables/index";

%cardShadow {
  box-shadow: var(--cardShadow);

  &:hover {
    box-shadow: var(--cardShadowHover);
  }
}

%tooltip {
  position: absolute;
  padding: 0.25em 0.5em;
  border-radius: $border-radius;
  top: -$spacing / 4;
  transform: translateY(-100%);

  background-color: $color-background;
  @extend %cardShadow;

  text-align: center;
  pointer-events: none;

  opacity: 0;
  transition: opacity ease-out 0.15s;

  z-index: 2;
}

%skeleton {
  background: linear-gradient(
    90deg,
    $color-text-faded 0%,
    $color-text 10%,
    $color-text-faded 20%,
    $color-text-faded 100%
  );
  background-size: 400% 100%;
  animation: moveGradient 3s linear infinite;
  opacity: 10% !important;
  border-radius: $border-radius;
  border: 0.1px solid $color-text;
}

@keyframes moveGradient {
  0% {
    background-position: 100% 50%;
  }
  100% {
    background-position: -100% 50%;
  }
}

%contentBox {
  background-color: $color-background-content;
  box-shadow: var(--contentShadow);
  border-radius: $border-radius;
  backdrop-filter: blur(0.1rem);
}

%button {
  cursor: pointer;
  padding: $spacing;
  background-color: var(--buttonBg-alt);
  outline: 2px solid $color-button-outline;
  border-radius: $border-radius;
  color: var(--buttonText-alt);
  font-weight: 700;

  &:hover,
  &:focus-visible {
    &:not(:disabled) {
      background-color: $color-button-outline;
      color: $color-background;
    }
  }

  &:disabled {
    cursor: not-allowed;
    opacity: 0.5;
  }
}

%buttonHover {
  isolation: isolate;
  position: relative;
  &::before,
  &::after {
    border-radius: inherit;
    content: "";
    position: absolute;
    inset: 0;
    z-index: -1;
    transition: opacity 0.1s ease-out;
  }

  // Used for gradient transitions
  &::after {
    background: linear-gradient(
      to right,
      $color-secondary 0%,
      $color-primary 4% 96%,
      $color-secondary 100%
    );
    box-shadow: 0.1rem 0 1rem -0.25rem $color-secondary;
    opacity: 0;
  }
  // Only used for background color
  &::before {
    content: "";
    background-color: $color-primary-bg;
    z-index: -2;
  }

  &:hover {
    --primaryTextColor: var(--textColor);
    outline-color: $color-secondary;
    .icon {
      --primaryTextColor: var(--textColor);
    }
    &::after {
      opacity: 0.4;
    }
  }
}

// Just swapping colors
%buttonHoverSecondary {
  @extend %buttonHover;
  outline-color: $color-secondary;
  color: $color-text-secondary;

  // Used for gradient transitions
  &::after {
    background: linear-gradient(
      to right,
      $color-primary 0%,
      $color-secondary 4% 96%,
      $color-primary 100%
    );
    box-shadow: 0.1rem 0 1rem -0.25rem $color-primary;
  }
  // Only used for background color
  &::before {
    background-color: $color-secondary-bg;
  }

  &:hover {
    outline-color: $color-primary;
    color: $color-text;
  }
}

%resetButtonDefaults {
  color: inherit;
  background-color: inherit;
  outline: none;

  &:hover,
  &:focus,
  &:focus-within,
  &:focus-visible {
    color: inherit;
    background-color: inherit;
    outline: none;
  }
}
